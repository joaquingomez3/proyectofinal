/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import universidad1.Alumno;
import universidad1.Inscripcion;
import universidad1.Materia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidad1.AlumnoData;
import universidad1.Conexion;
import universidad1.InscripcionData;
import universidad1.MateriaData;

/**
 *
 * @author Fran Gonzalez
 */
public class vistaPrincipalInscripcion extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private ArrayList<Inscripcion> listaInscripcion;
    private ArrayList<Materia> listaMaterias;
    private ArrayList<Alumno> listaAlumnos;
    private InscripcionData inscripcionData;
    private MateriaData materiaData;
    private AlumnoData alumnoData;
    private Conexion conexion;
    
    public vistaPrincipalInscripcion() {
        initComponents();
        conexion = new Conexion();
        modelo = new DefaultTableModel();
        
        inscripcionData = new InscripcionData(conexion);
        listaInscripcion = (ArrayList<Inscripcion>) inscripcionData.obtenerInscripciones();
        
        materiaData = new MateriaData(conexion);
        listaMaterias = (ArrayList<Materia>) materiaData.obtenerMaterias();
        
        alumnoData = new AlumnoData(conexion);
        listaAlumnos = (ArrayList<Alumno>) alumnoData.obtenerAlumnos();
        
        cbCargarlistadoMaterias();
        cbCargarListadoAlumno();
        armarTabla();
        cargarTablaCompleta();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSeleccion = new javax.swing.JPanel();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cbListaMaterias = new javax.swing.JComboBox<>();
        cbListaAlumnos = new javax.swing.JComboBox<>();
        labelAlumno = new javax.swing.JLabel();
        labelMateria = new javax.swing.JLabel();
        btnFiltrar = new javax.swing.JButton();
        txtSeleccion = new javax.swing.JTextField();
        labelInscripcion = new javax.swing.JLabel();
        labelCalificacion = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        panelDetalles = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabDetalles = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        panelSeleccion.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccion Inscripcion"));

        btnEditar.setText("ACTUALIZAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cbListaMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListaMateriasActionPerformed(evt);
            }
        });

        cbListaAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListaAlumnosActionPerformed(evt);
            }
        });

        labelAlumno.setText("Alumno");

        labelMateria.setText("Materia");

        btnFiltrar.setText("Filtrar");
        btnFiltrar.setToolTipText("");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        txtSeleccion.setText("0");
        txtSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeleccionActionPerformed(evt);
            }
        });

        labelInscripcion.setText("Id Inscrip");

        labelCalificacion.setText("Calificacion");

        txtCalificacion.setText("0");
        txtCalificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCalificacionActionPerformed(evt);
            }
        });

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSeleccionLayout = new javax.swing.GroupLayout(panelSeleccion);
        panelSeleccion.setLayout(panelSeleccionLayout);
        panelSeleccionLayout.setHorizontalGroup(
            panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSeleccionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMateria)
                    .addComponent(cbListaMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(cbListaAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(panelSeleccionLayout.createSequentialGroup()
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSeleccionLayout.createSequentialGroup()
                        .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelSeleccionLayout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(btnFiltrar))
                            .addGroup(panelSeleccionLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelCalificacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar)))
                        .addGap(14, 14, 14)
                        .addComponent(labelAlumno))
                    .addGroup(panelSeleccionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelInscripcion)
                        .addGap(18, 18, 18)
                        .addComponent(txtSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSeleccionLayout.setVerticalGroup(
            panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeleccionLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelInscripcion)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCalificacion)
                    .addComponent(btnEditar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMateria)
                    .addComponent(labelAlumno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbListaAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbListaMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(btnFiltrar))
        );

        panelDetalles.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles Inscripcion"));

        tabDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MATERIA", "ALUMNO", "ACTIVO", "CALIFICACION"
            }
        ));
        jScrollPane2.setViewportView(tabDetalles);

        btnListar.setText("Listar Todo");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDetallesLayout = new javax.swing.GroupLayout(panelDetalles);
        panelDetalles.setLayout(panelDetallesLayout);
        panelDetallesLayout.setHorizontalGroup(
            panelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(panelDetallesLayout.createSequentialGroup()
                        .addComponent(btnListar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDetallesLayout.setVerticalGroup(
            panelDetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDetallesLayout.createSequentialGroup()
                .addComponent(btnListar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cbListaAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbListaAlumnosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbListaAlumnosActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        cargarTablaCompleta();
    }//GEN-LAST:event_btnListarActionPerformed

    private void cbListaMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbListaMateriasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbListaMateriasActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void txtSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeleccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeleccionActionPerformed

    private void txtCalificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCalificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCalificacionActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarInscripcion();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        actualizarNota();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarInscripcion();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cbCargarlistadoMaterias(){
        for(Materia item:listaMaterias){
            cbListaMaterias.addItem(item);
        }
    }
    
    private void cbCargarListadoAlumno(){
        for(Alumno item: listaAlumnos){
            cbListaAlumnos.addItem(item);
        }
    }
    
    private void armarTabla(){
        ArrayList<Object> columns = new ArrayList<>();
        columns.add("ID");
        columns.add("MATERIA");
        columns.add("ALUMNO");
        columns.add("ACTIVO");
        columns.add("CALIFICACION");
        
        for(Object iterator:columns){
            modelo.addColumn(iterator);
        }
        tabDetalles.setModel(modelo);
    }
    
    private void borrarFilasTabla(){
        int contadorFilas = modelo.getRowCount() - 1;
        
        for (int i=contadorFilas;i>=0;i--){
            modelo.removeRow(i);
        }
    }
    
    public void cargarTablaCompleta(){
        borrarFilasTabla();
        listaInscripcion = (ArrayList<Inscripcion>) inscripcionData.obtenerInscripciones();
        for(Inscripcion ins: listaInscripcion){
            modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
        }
    }
    
    public void buscarInscripcion(){
        int id = Integer.parseInt(txtSeleccion.getText());
        Inscripcion ins = inscripcionData.buscarInscripcion(id);
        
        if(ins!=null){
            JOptionPane.showMessageDialog(null, "INSCRIPCION ENCONTRADA");
            borrarFilasTabla();
            modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
            txtCalificacion.setText(ins.getCalificacion() + "");
        }
    }
    
    public void actualizarNota(){
        int id = Integer.parseInt(txtSeleccion.getText());
        Inscripcion ins = inscripcionData.buscarInscripcion(id);
        
         if(ins!=null){
            
             ins.setCalificacion(Float.parseFloat(txtCalificacion.getText()));
             inscripcionData.actualizarInscripcion(ins);
             borrarFilasTabla();
             ins = inscripcionData.buscarInscripcion(id);
             modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
             
         }
    }
    
    public void eliminarInscripcion(){
        
        if(JOptionPane.showConfirmDialog(null, "ESTA SEGURO QUE DESEA ELIMINAR LA INSCRIPCION?") == 0){
            int id = Integer.parseInt(txtSeleccion.getText());
            Inscripcion ins = inscripcionData.buscarInscripcion(id);
            inscripcionData.eliminarInscripcion(ins);
            JOptionPane.showMessageDialog(null, "SE ELIMINIO REGISTRO");
            borrarFilasTabla();
            cargarTablaCompleta();
            txtCalificacion.setText("0");
            txtSeleccion.setText("0");
        }
     }
    
    public void filtrar(){
        Materia materia = (Materia) cbListaMaterias.getSelectedItem();
        Alumno alumno = (Alumno) cbListaAlumnos.getSelectedItem();
        
        if(alumno.equals(null) && materia.equals(null)){
            JOptionPane.showConfirmDialog(null, "PARA FILTRAR AL MENOS DEBE SELECCIONAR UN BOX");
        }else{
            if(alumno.equals(null)){
                borrarFilasTabla();
                listaInscripcion = (ArrayList<Inscripcion>) inscripcionData.listarAlumnosXMateria(materia.getIdMateria());
                for(Inscripcion ins: listaInscripcion){
                    modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
                }
            }else{
                if(materia.equals(null)){
                    borrarFilasTabla();
                    listaInscripcion = (ArrayList<Inscripcion>) inscripcionData.listarMateriasXAlumno(alumno.getIdAlumno());
                    for(Inscripcion ins: listaInscripcion){
                        modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
                    }
                }else{
                    borrarFilasTabla();
                    Inscripcion ins = inscripcionData.buscarInscripcionXIdForaneos(materia.getIdMateria(), alumno.getIdAlumno());
                    modelo.addRow(new Object[]{ins.getIdInscripcion(),ins.getMateria().getNombreMateria(),ins.getAlumno().getApellido()+", "+ins.getAlumno().getNombre(),ins.getAlumno().isActivo(),ins.getCalificacion()});
                    
                }
            }
                
        }
        
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnBuscar;
    public javax.swing.JButton btnEditar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnFiltrar;
    public javax.swing.JButton btnListar;
    public javax.swing.JComboBox<Alumno> cbListaAlumnos;
    public javax.swing.JComboBox<Materia> cbListaMaterias;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JLabel labelAlumno;
    public javax.swing.JLabel labelCalificacion;
    public javax.swing.JLabel labelInscripcion;
    public javax.swing.JLabel labelMateria;
    private javax.swing.JPanel panelDetalles;
    private javax.swing.JPanel panelSeleccion;
    public javax.swing.JTable tabDetalles;
    public javax.swing.JTextField txtCalificacion;
    public javax.swing.JTextField txtSeleccion;
    // End of variables declaration//GEN-END:variables
}
